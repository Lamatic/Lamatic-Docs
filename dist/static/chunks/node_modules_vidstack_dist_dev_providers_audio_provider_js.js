"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["node_modules_vidstack_dist_dev_providers_audio_provider_js"],{

/***/ "./node_modules/vidstack/dist/dev/providers/audio/provider.js":
/*!********************************************************************!*\
  !*** ./node_modules/vidstack/dist/dev/providers/audio/provider.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AudioProvider: function() { return /* binding */ AudioProvider; }\n/* harmony export */ });\n/* harmony import */ var _html_provider_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../html/provider.js */ \"./node_modules/vidstack/dist/dev/providers/html/provider.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass AudioProvider extends _html_provider_js__WEBPACK_IMPORTED_MODULE_0__.H {\n  $$PROVIDER_TYPE = \"AUDIO\";\n  get type() {\n    return \"audio\";\n  }\n  setup(context) {\n    super.setup(context);\n    if (this.type === \"audio\")\n      context.delegate._dispatch(\"provider-setup\", { detail: this });\n  }\n  /**\n   * The native HTML `<audio>` element.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLAudioElement}\n   */\n  get audio() {\n    return this._media;\n  }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdmlkc3RhY2svZGlzdC9kZXYvcHJvdmlkZXJzL2F1ZGlvL3Byb3ZpZGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQTZEO0FBQ3BDO0FBQ0o7QUFDSTtBQUNhO0FBQ2pCO0FBQ0U7QUFDTTtBQUNBO0FBQ0g7QUFDQTtBQUNFO0FBQ0Q7QUFDRTtBQUNMO0FBQ2dCOztBQUV4Qyw0QkFBNEIsZ0RBQWlCO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscURBQXFELGNBQWM7QUFDbkU7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFeUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3ZpZHN0YWNrL2Rpc3QvZGV2L3Byb3ZpZGVycy9hdWRpby9wcm92aWRlci5qcz9jNDFlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEggYXMgSFRNTE1lZGlhUHJvdmlkZXIgfSBmcm9tICcuLi9odG1sL3Byb3ZpZGVyLmpzJztcbmltcG9ydCAnbWF2ZXJpY2suanMvc3RkJztcbmltcG9ydCAnLi9sb2FkZXIuanMnO1xuaW1wb3J0ICdtYXZlcmljay5qcy9kb20nO1xuaW1wb3J0ICcuLi9odG1sL2h0bWzigJNtZWRpYS1ldmVudHMuanMnO1xuaW1wb3J0ICdtYXZlcmljay5qcyc7XG5pbXBvcnQgJy4uL2hscy9obHMuanMnO1xuaW1wb3J0ICcuLi8uLi9tZWRpYS1jb3JlLmpzJztcbmltcG9ydCAnbWF2ZXJpY2suanMvZWxlbWVudCc7XG5pbXBvcnQgJy4uL3R5cGUtY2hlY2suanMnO1xuaW1wb3J0ICcuLi9obHMvbG9hZGVyLmpzJztcbmltcG9ydCAnLi4vdmlkZW8vbG9hZGVyLmpzJztcbmltcG9ydCAnLi4vLi4vbWVkaWEtdWkuanMnO1xuaW1wb3J0ICcuLi8uLi9pY29ucy9pY29uLmpzJztcbmltcG9ydCAnbWVkaWEtY2FwdGlvbnMnO1xuaW1wb3J0ICcuLi9odG1sL25hdGl2ZS1hdWRpby10cmFja3MuanMnO1xuXG5jbGFzcyBBdWRpb1Byb3ZpZGVyIGV4dGVuZHMgSFRNTE1lZGlhUHJvdmlkZXIge1xuICAkJFBST1ZJREVSX1RZUEUgPSBcIkFVRElPXCI7XG4gIGdldCB0eXBlKCkge1xuICAgIHJldHVybiBcImF1ZGlvXCI7XG4gIH1cbiAgc2V0dXAoY29udGV4dCkge1xuICAgIHN1cGVyLnNldHVwKGNvbnRleHQpO1xuICAgIGlmICh0aGlzLnR5cGUgPT09IFwiYXVkaW9cIilcbiAgICAgIGNvbnRleHQuZGVsZWdhdGUuX2Rpc3BhdGNoKFwicHJvdmlkZXItc2V0dXBcIiwgeyBkZXRhaWw6IHRoaXMgfSk7XG4gIH1cbiAgLyoqXG4gICAqIFRoZSBuYXRpdmUgSFRNTCBgPGF1ZGlvPmAgZWxlbWVudC5cbiAgICpcbiAgICogQHNlZSB7QGxpbmsgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0hUTUxBdWRpb0VsZW1lbnR9XG4gICAqL1xuICBnZXQgYXVkaW8oKSB7XG4gICAgcmV0dXJuIHRoaXMuX21lZGlhO1xuICB9XG59XG5cbmV4cG9ydCB7IEF1ZGlvUHJvdmlkZXIgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/vidstack/dist/dev/providers/audio/provider.js\n"));

/***/ }),

/***/ "./node_modules/vidstack/dist/dev/providers/hls/hls.js":
/*!*************************************************************!*\
  !*** ./node_modules/vidstack/dist/dev/providers/hls/hls.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   H: function() { return /* binding */ HLSController; },\n/* harmony export */   R: function() { return /* binding */ RAFLoop; }\n/* harmony export */ });\n/* harmony import */ var maverick_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! maverick.js */ \"./node_modules/maverick.js/dist/dev/runtime.js\");\n/* harmony import */ var maverick_js_std__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! maverick.js/std */ \"./node_modules/maverick.js/dist/dev/std.js\");\n/* harmony import */ var _media_core_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../media-core.js */ \"./node_modules/vidstack/dist/dev/media-core.js\");\n\n\n\n\nclass RAFLoop {\n  constructor(_callback) {\n    this._callback = _callback;\n  }\n  _id;\n  _start() {\n    if (!(0,maverick_js_std__WEBPACK_IMPORTED_MODULE_0__.isUndefined)(this._id))\n      return;\n    this._loop();\n  }\n  _stop() {\n    if ((0,maverick_js_std__WEBPACK_IMPORTED_MODULE_0__.isNumber)(this._id))\n      window.cancelAnimationFrame(this._id);\n    this._id = void 0;\n  }\n  _loop() {\n    this._id = window.requestAnimationFrame(() => {\n      if ((0,maverick_js_std__WEBPACK_IMPORTED_MODULE_0__.isUndefined)(this._id))\n        return;\n      this._callback();\n      this._loop();\n    });\n  }\n}\n\nconst toDOMEventType = (type) => (0,maverick_js_std__WEBPACK_IMPORTED_MODULE_0__.camelToKebabCase)(type);\nclass HLSController {\n  constructor(_video) {\n    this._video = _video;\n  }\n  _context;\n  _instance = null;\n  _stopLiveSync = null;\n  _config = {};\n  _callbacks = /* @__PURE__ */ new Set();\n  get instance() {\n    return this._instance;\n  }\n  setup(ctor, context) {\n    this._context = context;\n    const isLive = (0,maverick_js__WEBPACK_IMPORTED_MODULE_1__.peek)(context.$store.streamType).includes(\"live\"), isLiveLowLatency = (0,maverick_js__WEBPACK_IMPORTED_MODULE_1__.peek)(context.$store.streamType).includes(\"ll-\");\n    this._instance = new ctor({\n      lowLatencyMode: isLiveLowLatency,\n      backBufferLength: isLiveLowLatency ? 4 : isLive ? 8 : void 0,\n      renderTextTracksNatively: false,\n      ...this._config\n    });\n    const dispatcher = this._dispatchHLSEvent.bind(this);\n    for (const event of Object.values(ctor.Events))\n      this._instance.on(event, dispatcher);\n    this._instance.on(ctor.Events.ERROR, this._onError.bind(this));\n    for (const callback of this._callbacks)\n      callback(this._instance);\n    context.player.dispatchEvent(new maverick_js_std__WEBPACK_IMPORTED_MODULE_0__.DOMEvent(\"hls-instance\", { detail: this._instance }));\n    this._instance.attachMedia(this._video);\n    this._instance.on(ctor.Events.AUDIO_TRACK_SWITCHED, this._onAudioSwitch.bind(this));\n    this._instance.on(ctor.Events.LEVEL_SWITCHED, this._onLevelSwitched.bind(this));\n    this._instance.on(ctor.Events.LEVEL_LOADED, this._onLevelLoaded.bind(this));\n    this._instance.on(ctor.Events.NON_NATIVE_TEXT_TRACKS_FOUND, this._onTracksFound.bind(this));\n    this._instance.on(ctor.Events.CUES_PARSED, this._onCuesParsed.bind(this));\n    context.qualities[_media_core_js__WEBPACK_IMPORTED_MODULE_2__.G] = this._enableAutoQuality.bind(this);\n    (0,maverick_js_std__WEBPACK_IMPORTED_MODULE_0__.listenEvent)(context.qualities, \"change\", this._onQualityChange.bind(this));\n    (0,maverick_js_std__WEBPACK_IMPORTED_MODULE_0__.listenEvent)(context.audioTracks, \"change\", this._onAudioChange.bind(this));\n    this._stopLiveSync = (0,maverick_js__WEBPACK_IMPORTED_MODULE_1__.effect)(this._liveSync.bind(this));\n  }\n  _liveSync() {\n    if (!this._context.$store.live())\n      return;\n    const raf = new RAFLoop(this._liveSyncPosition.bind(this));\n    raf._start();\n    return raf._stop.bind(raf);\n  }\n  _liveSyncPosition() {\n    this._context.$store.liveSyncPosition.set(this._instance?.liveSyncPosition ?? Infinity);\n  }\n  _dispatchHLSEvent(eventType, detail) {\n    this._context.player.dispatchEvent(new maverick_js_std__WEBPACK_IMPORTED_MODULE_0__.DOMEvent(toDOMEventType(eventType), { detail }));\n  }\n  _onTracksFound(eventType, data) {\n    const event = new maverick_js_std__WEBPACK_IMPORTED_MODULE_0__.DOMEvent(eventType, { detail: data });\n    let currentTrack = -1;\n    for (let i = 0; i < data.tracks.length; i++) {\n      const nonNativeTrack = data.tracks[i], init = nonNativeTrack.subtitleTrack ?? nonNativeTrack.closedCaptions, track = new _media_core_js__WEBPACK_IMPORTED_MODULE_2__.H({\n        id: `hls-${nonNativeTrack.kind}${i}`,\n        src: init?.url,\n        label: nonNativeTrack.label,\n        language: init?.lang,\n        kind: nonNativeTrack.kind\n      });\n      track[_media_core_js__WEBPACK_IMPORTED_MODULE_2__.J] = 2;\n      track[_media_core_js__WEBPACK_IMPORTED_MODULE_2__.K] = () => {\n        if (track.mode === \"showing\") {\n          this._instance.subtitleTrack = i;\n          currentTrack = i;\n        } else if (currentTrack === i) {\n          this._instance.subtitleTrack = -1;\n          currentTrack = -1;\n        }\n      };\n      if (nonNativeTrack.default)\n        track.setMode(\"showing\", event);\n      this._context.textTracks.add(track, event);\n    }\n  }\n  _onCuesParsed(eventType, data) {\n    const track = this._context.textTracks.getById(`hls-${data.track}`);\n    if (!track)\n      return;\n    const event = new maverick_js_std__WEBPACK_IMPORTED_MODULE_0__.DOMEvent(eventType, { detail: data });\n    for (const cue of data.cues) {\n      cue.positionAlign = \"auto\";\n      track.addCue(cue, event);\n    }\n  }\n  _onAudioSwitch(eventType, data) {\n    const track = this._context.audioTracks[data.id];\n    if (track) {\n      this._context.audioTracks[_media_core_js__WEBPACK_IMPORTED_MODULE_2__.L](\n        track,\n        true,\n        new maverick_js_std__WEBPACK_IMPORTED_MODULE_0__.DOMEvent(eventType, { detail: data })\n      );\n    }\n  }\n  _onLevelSwitched(eventType, data) {\n    const quality = this._context.qualities[data.level];\n    if (quality) {\n      this._context.qualities[_media_core_js__WEBPACK_IMPORTED_MODULE_2__.L](\n        quality,\n        true,\n        new maverick_js_std__WEBPACK_IMPORTED_MODULE_0__.DOMEvent(eventType, { detail: data })\n      );\n    }\n  }\n  _onLevelLoaded(eventType, data) {\n    if (this._context.$store.canPlay())\n      return;\n    const { type, live, totalduration: duration } = data.details;\n    const event = new maverick_js_std__WEBPACK_IMPORTED_MODULE_0__.DOMEvent(eventType, { detail: data });\n    this._context.delegate._dispatch(\"stream-type-change\", {\n      detail: live ? type === \"EVENT\" && Number.isFinite(duration) ? \"live:dvr\" : \"live\" : \"on-demand\",\n      trigger: event\n    });\n    this._context.delegate._dispatch(\"duration-change\", { detail: duration, trigger: event });\n    const media = this._instance.media;\n    if (this._instance.currentLevel === -1) {\n      this._context.qualities[_media_core_js__WEBPACK_IMPORTED_MODULE_2__.N](true, event);\n    }\n    for (const track of this._instance.audioTracks) {\n      this._context.audioTracks[_media_core_js__WEBPACK_IMPORTED_MODULE_2__.P](\n        {\n          id: track.id + \"\",\n          label: track.name,\n          language: track.lang || \"\",\n          kind: \"main\"\n        },\n        event\n      );\n    }\n    for (const level of this._instance.levels) {\n      this._context.qualities[_media_core_js__WEBPACK_IMPORTED_MODULE_2__.P](\n        {\n          width: level.width,\n          height: level.height,\n          codec: level.codecSet,\n          bitrate: level.bitrate\n        },\n        event\n      );\n    }\n    media.dispatchEvent(new maverick_js_std__WEBPACK_IMPORTED_MODULE_0__.DOMEvent(\"canplay\", { trigger: event }));\n  }\n  _onError(eventType, data) {\n    {\n      this._context.logger?.errorGroup(`HLS error \\`${eventType}\\``).labelledLog(\"Media Element\", this._instance?.media).labelledLog(\"HLS Instance\", this._instance).labelledLog(\"Event Type\", eventType).labelledLog(\"Data\", data).labelledLog(\"Src\", (0,maverick_js__WEBPACK_IMPORTED_MODULE_1__.peek)(this._context.$store.source)).labelledLog(\"Media Store\", { ...this._context.$store }).dispatch();\n    }\n    if (data.fatal) {\n      switch (data.type) {\n        case \"networkError\":\n          this._instance?.startLoad();\n          break;\n        case \"mediaError\":\n          this._instance?.recoverMediaError();\n          break;\n        default:\n          this._instance?.destroy();\n          this._instance = null;\n          break;\n      }\n    }\n  }\n  _enableAutoQuality() {\n    if (this._instance)\n      this._instance.currentLevel = -1;\n  }\n  _onQualityChange() {\n    const { qualities } = this._context;\n    if (!this._instance || qualities.auto)\n      return;\n    this._instance[qualities.switch + \"Level\"] = qualities.selectedIndex;\n    if (_media_core_js__WEBPACK_IMPORTED_MODULE_2__.Q)\n      this._video.currentTime = this._video.currentTime;\n  }\n  _onAudioChange() {\n    const { audioTracks } = this._context;\n    if (this._instance && this._instance.audioTrack !== audioTracks.selectedIndex) {\n      this._instance.audioTrack = audioTracks.selectedIndex;\n    }\n  }\n  _destroy() {\n    if (this._context)\n      this._context.qualities[_media_core_js__WEBPACK_IMPORTED_MODULE_2__.G] = void 0;\n    this._instance?.destroy();\n    this._instance = null;\n    this._stopLiveSync?.();\n    this._stopLiveSync = null;\n    this._context?.logger?.info(\"\\u{1F3D7}\\uFE0F Destroyed HLS instance\");\n  }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdmlkc3RhY2svZGlzdC9kZXYvcHJvdmlkZXJzL2hscy9obHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBMkM7QUFDc0Q7QUFDbUg7O0FBRXBOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsNERBQVc7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHlEQUFRO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLDREQUFXO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBLGlDQUFpQyxpRUFBZ0I7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixpREFBSSxpRUFBaUUsaURBQUk7QUFDNUY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUMscURBQVEsbUJBQW1CLHdCQUF3QjtBQUN4RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsNkNBQW1CO0FBQ3pDLElBQUksNERBQVc7QUFDZixJQUFJLDREQUFXO0FBQ2YseUJBQXlCLG1EQUFNO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyxxREFBUSw4QkFBOEIsUUFBUTtBQUN6RjtBQUNBO0FBQ0Esc0JBQXNCLHFEQUFRLGNBQWMsY0FBYztBQUMxRDtBQUNBLG9CQUFvQix3QkFBd0I7QUFDNUMsK0hBQStILDZDQUFTO0FBQ3hJLG1CQUFtQixvQkFBb0IsRUFBRSxFQUFFO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLFlBQVksNkNBQXNCO0FBQ2xDLFlBQVksNkNBQXlCO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBEQUEwRCxXQUFXO0FBQ3JFO0FBQ0E7QUFDQSxzQkFBc0IscURBQVEsY0FBYyxjQUFjO0FBQzFEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MsNkNBQVc7QUFDM0M7QUFDQTtBQUNBLFlBQVkscURBQVEsY0FBYyxjQUFjO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4Qiw2Q0FBVztBQUN6QztBQUNBO0FBQ0EsWUFBWSxxREFBUSxjQUFjLGNBQWM7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxzQ0FBc0M7QUFDbEQsc0JBQXNCLHFEQUFRLGNBQWMsY0FBYztBQUMxRDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsMERBQTBELGtDQUFrQztBQUM1RjtBQUNBO0FBQ0EsOEJBQThCLDZDQUFnQjtBQUM5QztBQUNBO0FBQ0EsZ0NBQWdDLDZDQUFRO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsNkNBQVE7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIscURBQVEsY0FBYyxnQkFBZ0I7QUFDbEU7QUFDQTtBQUNBO0FBQ0Esc0RBQXNELFVBQVUsdUxBQXVMLGlEQUFJLDREQUE0RCx5QkFBeUI7QUFDaFY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxZQUFZO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBLFFBQVEsNkNBQVM7QUFDakI7QUFDQTtBQUNBO0FBQ0EsWUFBWSxjQUFjO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4Qiw2Q0FBbUI7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MsTUFBTTtBQUMxQztBQUNBOztBQUU0QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdmlkc3RhY2svZGlzdC9kZXYvcHJvdmlkZXJzL2hscy9obHMuanM/NjViZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBwZWVrLCBlZmZlY3QgfSBmcm9tICdtYXZlcmljay5qcyc7XG5pbXBvcnQgeyBpc1VuZGVmaW5lZCwgaXNOdW1iZXIsIERPTUV2ZW50LCBsaXN0ZW5FdmVudCwgY2FtZWxUb0tlYmFiQ2FzZSB9IGZyb20gJ21hdmVyaWNrLmpzL3N0ZCc7XG5pbXBvcnQgeyBHIGFzIEVOQUJMRV9BVVRPX1FVQUxJVFksIEggYXMgVGV4dFRyYWNrLCBKIGFzIFRFWFRfVFJBQ0tfUkVBRFlfU1RBVEUsIEsgYXMgVEVYVF9UUkFDS19PTl9NT0RFX0NIQU5HRSwgTCBhcyBMSVNUX1NFTEVDVCwgTiBhcyBTRVRfQVVUT19RVUFMSVRZLCBQIGFzIExJU1RfQURELCBRIGFzIElTX0NIUk9NRSB9IGZyb20gJy4uLy4uL21lZGlhLWNvcmUuanMnO1xuXG5jbGFzcyBSQUZMb29wIHtcbiAgY29uc3RydWN0b3IoX2NhbGxiYWNrKSB7XG4gICAgdGhpcy5fY2FsbGJhY2sgPSBfY2FsbGJhY2s7XG4gIH1cbiAgX2lkO1xuICBfc3RhcnQoKSB7XG4gICAgaWYgKCFpc1VuZGVmaW5lZCh0aGlzLl9pZCkpXG4gICAgICByZXR1cm47XG4gICAgdGhpcy5fbG9vcCgpO1xuICB9XG4gIF9zdG9wKCkge1xuICAgIGlmIChpc051bWJlcih0aGlzLl9pZCkpXG4gICAgICB3aW5kb3cuY2FuY2VsQW5pbWF0aW9uRnJhbWUodGhpcy5faWQpO1xuICAgIHRoaXMuX2lkID0gdm9pZCAwO1xuICB9XG4gIF9sb29wKCkge1xuICAgIHRoaXMuX2lkID0gd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSgoKSA9PiB7XG4gICAgICBpZiAoaXNVbmRlZmluZWQodGhpcy5faWQpKVxuICAgICAgICByZXR1cm47XG4gICAgICB0aGlzLl9jYWxsYmFjaygpO1xuICAgICAgdGhpcy5fbG9vcCgpO1xuICAgIH0pO1xuICB9XG59XG5cbmNvbnN0IHRvRE9NRXZlbnRUeXBlID0gKHR5cGUpID0+IGNhbWVsVG9LZWJhYkNhc2UodHlwZSk7XG5jbGFzcyBITFNDb250cm9sbGVyIHtcbiAgY29uc3RydWN0b3IoX3ZpZGVvKSB7XG4gICAgdGhpcy5fdmlkZW8gPSBfdmlkZW87XG4gIH1cbiAgX2NvbnRleHQ7XG4gIF9pbnN0YW5jZSA9IG51bGw7XG4gIF9zdG9wTGl2ZVN5bmMgPSBudWxsO1xuICBfY29uZmlnID0ge307XG4gIF9jYWxsYmFja3MgPSAvKiBAX19QVVJFX18gKi8gbmV3IFNldCgpO1xuICBnZXQgaW5zdGFuY2UoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2luc3RhbmNlO1xuICB9XG4gIHNldHVwKGN0b3IsIGNvbnRleHQpIHtcbiAgICB0aGlzLl9jb250ZXh0ID0gY29udGV4dDtcbiAgICBjb25zdCBpc0xpdmUgPSBwZWVrKGNvbnRleHQuJHN0b3JlLnN0cmVhbVR5cGUpLmluY2x1ZGVzKFwibGl2ZVwiKSwgaXNMaXZlTG93TGF0ZW5jeSA9IHBlZWsoY29udGV4dC4kc3RvcmUuc3RyZWFtVHlwZSkuaW5jbHVkZXMoXCJsbC1cIik7XG4gICAgdGhpcy5faW5zdGFuY2UgPSBuZXcgY3Rvcih7XG4gICAgICBsb3dMYXRlbmN5TW9kZTogaXNMaXZlTG93TGF0ZW5jeSxcbiAgICAgIGJhY2tCdWZmZXJMZW5ndGg6IGlzTGl2ZUxvd0xhdGVuY3kgPyA0IDogaXNMaXZlID8gOCA6IHZvaWQgMCxcbiAgICAgIHJlbmRlclRleHRUcmFja3NOYXRpdmVseTogZmFsc2UsXG4gICAgICAuLi50aGlzLl9jb25maWdcbiAgICB9KTtcbiAgICBjb25zdCBkaXNwYXRjaGVyID0gdGhpcy5fZGlzcGF0Y2hITFNFdmVudC5iaW5kKHRoaXMpO1xuICAgIGZvciAoY29uc3QgZXZlbnQgb2YgT2JqZWN0LnZhbHVlcyhjdG9yLkV2ZW50cykpXG4gICAgICB0aGlzLl9pbnN0YW5jZS5vbihldmVudCwgZGlzcGF0Y2hlcik7XG4gICAgdGhpcy5faW5zdGFuY2Uub24oY3Rvci5FdmVudHMuRVJST1IsIHRoaXMuX29uRXJyb3IuYmluZCh0aGlzKSk7XG4gICAgZm9yIChjb25zdCBjYWxsYmFjayBvZiB0aGlzLl9jYWxsYmFja3MpXG4gICAgICBjYWxsYmFjayh0aGlzLl9pbnN0YW5jZSk7XG4gICAgY29udGV4dC5wbGF5ZXIuZGlzcGF0Y2hFdmVudChuZXcgRE9NRXZlbnQoXCJobHMtaW5zdGFuY2VcIiwgeyBkZXRhaWw6IHRoaXMuX2luc3RhbmNlIH0pKTtcbiAgICB0aGlzLl9pbnN0YW5jZS5hdHRhY2hNZWRpYSh0aGlzLl92aWRlbyk7XG4gICAgdGhpcy5faW5zdGFuY2Uub24oY3Rvci5FdmVudHMuQVVESU9fVFJBQ0tfU1dJVENIRUQsIHRoaXMuX29uQXVkaW9Td2l0Y2guYmluZCh0aGlzKSk7XG4gICAgdGhpcy5faW5zdGFuY2Uub24oY3Rvci5FdmVudHMuTEVWRUxfU1dJVENIRUQsIHRoaXMuX29uTGV2ZWxTd2l0Y2hlZC5iaW5kKHRoaXMpKTtcbiAgICB0aGlzLl9pbnN0YW5jZS5vbihjdG9yLkV2ZW50cy5MRVZFTF9MT0FERUQsIHRoaXMuX29uTGV2ZWxMb2FkZWQuYmluZCh0aGlzKSk7XG4gICAgdGhpcy5faW5zdGFuY2Uub24oY3Rvci5FdmVudHMuTk9OX05BVElWRV9URVhUX1RSQUNLU19GT1VORCwgdGhpcy5fb25UcmFja3NGb3VuZC5iaW5kKHRoaXMpKTtcbiAgICB0aGlzLl9pbnN0YW5jZS5vbihjdG9yLkV2ZW50cy5DVUVTX1BBUlNFRCwgdGhpcy5fb25DdWVzUGFyc2VkLmJpbmQodGhpcykpO1xuICAgIGNvbnRleHQucXVhbGl0aWVzW0VOQUJMRV9BVVRPX1FVQUxJVFldID0gdGhpcy5fZW5hYmxlQXV0b1F1YWxpdHkuYmluZCh0aGlzKTtcbiAgICBsaXN0ZW5FdmVudChjb250ZXh0LnF1YWxpdGllcywgXCJjaGFuZ2VcIiwgdGhpcy5fb25RdWFsaXR5Q2hhbmdlLmJpbmQodGhpcykpO1xuICAgIGxpc3RlbkV2ZW50KGNvbnRleHQuYXVkaW9UcmFja3MsIFwiY2hhbmdlXCIsIHRoaXMuX29uQXVkaW9DaGFuZ2UuYmluZCh0aGlzKSk7XG4gICAgdGhpcy5fc3RvcExpdmVTeW5jID0gZWZmZWN0KHRoaXMuX2xpdmVTeW5jLmJpbmQodGhpcykpO1xuICB9XG4gIF9saXZlU3luYygpIHtcbiAgICBpZiAoIXRoaXMuX2NvbnRleHQuJHN0b3JlLmxpdmUoKSlcbiAgICAgIHJldHVybjtcbiAgICBjb25zdCByYWYgPSBuZXcgUkFGTG9vcCh0aGlzLl9saXZlU3luY1Bvc2l0aW9uLmJpbmQodGhpcykpO1xuICAgIHJhZi5fc3RhcnQoKTtcbiAgICByZXR1cm4gcmFmLl9zdG9wLmJpbmQocmFmKTtcbiAgfVxuICBfbGl2ZVN5bmNQb3NpdGlvbigpIHtcbiAgICB0aGlzLl9jb250ZXh0LiRzdG9yZS5saXZlU3luY1Bvc2l0aW9uLnNldCh0aGlzLl9pbnN0YW5jZT8ubGl2ZVN5bmNQb3NpdGlvbiA/PyBJbmZpbml0eSk7XG4gIH1cbiAgX2Rpc3BhdGNoSExTRXZlbnQoZXZlbnRUeXBlLCBkZXRhaWwpIHtcbiAgICB0aGlzLl9jb250ZXh0LnBsYXllci5kaXNwYXRjaEV2ZW50KG5ldyBET01FdmVudCh0b0RPTUV2ZW50VHlwZShldmVudFR5cGUpLCB7IGRldGFpbCB9KSk7XG4gIH1cbiAgX29uVHJhY2tzRm91bmQoZXZlbnRUeXBlLCBkYXRhKSB7XG4gICAgY29uc3QgZXZlbnQgPSBuZXcgRE9NRXZlbnQoZXZlbnRUeXBlLCB7IGRldGFpbDogZGF0YSB9KTtcbiAgICBsZXQgY3VycmVudFRyYWNrID0gLTE7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBkYXRhLnRyYWNrcy5sZW5ndGg7IGkrKykge1xuICAgICAgY29uc3Qgbm9uTmF0aXZlVHJhY2sgPSBkYXRhLnRyYWNrc1tpXSwgaW5pdCA9IG5vbk5hdGl2ZVRyYWNrLnN1YnRpdGxlVHJhY2sgPz8gbm9uTmF0aXZlVHJhY2suY2xvc2VkQ2FwdGlvbnMsIHRyYWNrID0gbmV3IFRleHRUcmFjayh7XG4gICAgICAgIGlkOiBgaGxzLSR7bm9uTmF0aXZlVHJhY2sua2luZH0ke2l9YCxcbiAgICAgICAgc3JjOiBpbml0Py51cmwsXG4gICAgICAgIGxhYmVsOiBub25OYXRpdmVUcmFjay5sYWJlbCxcbiAgICAgICAgbGFuZ3VhZ2U6IGluaXQ/LmxhbmcsXG4gICAgICAgIGtpbmQ6IG5vbk5hdGl2ZVRyYWNrLmtpbmRcbiAgICAgIH0pO1xuICAgICAgdHJhY2tbVEVYVF9UUkFDS19SRUFEWV9TVEFURV0gPSAyO1xuICAgICAgdHJhY2tbVEVYVF9UUkFDS19PTl9NT0RFX0NIQU5HRV0gPSAoKSA9PiB7XG4gICAgICAgIGlmICh0cmFjay5tb2RlID09PSBcInNob3dpbmdcIikge1xuICAgICAgICAgIHRoaXMuX2luc3RhbmNlLnN1YnRpdGxlVHJhY2sgPSBpO1xuICAgICAgICAgIGN1cnJlbnRUcmFjayA9IGk7XG4gICAgICAgIH0gZWxzZSBpZiAoY3VycmVudFRyYWNrID09PSBpKSB7XG4gICAgICAgICAgdGhpcy5faW5zdGFuY2Uuc3VidGl0bGVUcmFjayA9IC0xO1xuICAgICAgICAgIGN1cnJlbnRUcmFjayA9IC0xO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgICAgaWYgKG5vbk5hdGl2ZVRyYWNrLmRlZmF1bHQpXG4gICAgICAgIHRyYWNrLnNldE1vZGUoXCJzaG93aW5nXCIsIGV2ZW50KTtcbiAgICAgIHRoaXMuX2NvbnRleHQudGV4dFRyYWNrcy5hZGQodHJhY2ssIGV2ZW50KTtcbiAgICB9XG4gIH1cbiAgX29uQ3Vlc1BhcnNlZChldmVudFR5cGUsIGRhdGEpIHtcbiAgICBjb25zdCB0cmFjayA9IHRoaXMuX2NvbnRleHQudGV4dFRyYWNrcy5nZXRCeUlkKGBobHMtJHtkYXRhLnRyYWNrfWApO1xuICAgIGlmICghdHJhY2spXG4gICAgICByZXR1cm47XG4gICAgY29uc3QgZXZlbnQgPSBuZXcgRE9NRXZlbnQoZXZlbnRUeXBlLCB7IGRldGFpbDogZGF0YSB9KTtcbiAgICBmb3IgKGNvbnN0IGN1ZSBvZiBkYXRhLmN1ZXMpIHtcbiAgICAgIGN1ZS5wb3NpdGlvbkFsaWduID0gXCJhdXRvXCI7XG4gICAgICB0cmFjay5hZGRDdWUoY3VlLCBldmVudCk7XG4gICAgfVxuICB9XG4gIF9vbkF1ZGlvU3dpdGNoKGV2ZW50VHlwZSwgZGF0YSkge1xuICAgIGNvbnN0IHRyYWNrID0gdGhpcy5fY29udGV4dC5hdWRpb1RyYWNrc1tkYXRhLmlkXTtcbiAgICBpZiAodHJhY2spIHtcbiAgICAgIHRoaXMuX2NvbnRleHQuYXVkaW9UcmFja3NbTElTVF9TRUxFQ1RdKFxuICAgICAgICB0cmFjayxcbiAgICAgICAgdHJ1ZSxcbiAgICAgICAgbmV3IERPTUV2ZW50KGV2ZW50VHlwZSwgeyBkZXRhaWw6IGRhdGEgfSlcbiAgICAgICk7XG4gICAgfVxuICB9XG4gIF9vbkxldmVsU3dpdGNoZWQoZXZlbnRUeXBlLCBkYXRhKSB7XG4gICAgY29uc3QgcXVhbGl0eSA9IHRoaXMuX2NvbnRleHQucXVhbGl0aWVzW2RhdGEubGV2ZWxdO1xuICAgIGlmIChxdWFsaXR5KSB7XG4gICAgICB0aGlzLl9jb250ZXh0LnF1YWxpdGllc1tMSVNUX1NFTEVDVF0oXG4gICAgICAgIHF1YWxpdHksXG4gICAgICAgIHRydWUsXG4gICAgICAgIG5ldyBET01FdmVudChldmVudFR5cGUsIHsgZGV0YWlsOiBkYXRhIH0pXG4gICAgICApO1xuICAgIH1cbiAgfVxuICBfb25MZXZlbExvYWRlZChldmVudFR5cGUsIGRhdGEpIHtcbiAgICBpZiAodGhpcy5fY29udGV4dC4kc3RvcmUuY2FuUGxheSgpKVxuICAgICAgcmV0dXJuO1xuICAgIGNvbnN0IHsgdHlwZSwgbGl2ZSwgdG90YWxkdXJhdGlvbjogZHVyYXRpb24gfSA9IGRhdGEuZGV0YWlscztcbiAgICBjb25zdCBldmVudCA9IG5ldyBET01FdmVudChldmVudFR5cGUsIHsgZGV0YWlsOiBkYXRhIH0pO1xuICAgIHRoaXMuX2NvbnRleHQuZGVsZWdhdGUuX2Rpc3BhdGNoKFwic3RyZWFtLXR5cGUtY2hhbmdlXCIsIHtcbiAgICAgIGRldGFpbDogbGl2ZSA/IHR5cGUgPT09IFwiRVZFTlRcIiAmJiBOdW1iZXIuaXNGaW5pdGUoZHVyYXRpb24pID8gXCJsaXZlOmR2clwiIDogXCJsaXZlXCIgOiBcIm9uLWRlbWFuZFwiLFxuICAgICAgdHJpZ2dlcjogZXZlbnRcbiAgICB9KTtcbiAgICB0aGlzLl9jb250ZXh0LmRlbGVnYXRlLl9kaXNwYXRjaChcImR1cmF0aW9uLWNoYW5nZVwiLCB7IGRldGFpbDogZHVyYXRpb24sIHRyaWdnZXI6IGV2ZW50IH0pO1xuICAgIGNvbnN0IG1lZGlhID0gdGhpcy5faW5zdGFuY2UubWVkaWE7XG4gICAgaWYgKHRoaXMuX2luc3RhbmNlLmN1cnJlbnRMZXZlbCA9PT0gLTEpIHtcbiAgICAgIHRoaXMuX2NvbnRleHQucXVhbGl0aWVzW1NFVF9BVVRPX1FVQUxJVFldKHRydWUsIGV2ZW50KTtcbiAgICB9XG4gICAgZm9yIChjb25zdCB0cmFjayBvZiB0aGlzLl9pbnN0YW5jZS5hdWRpb1RyYWNrcykge1xuICAgICAgdGhpcy5fY29udGV4dC5hdWRpb1RyYWNrc1tMSVNUX0FERF0oXG4gICAgICAgIHtcbiAgICAgICAgICBpZDogdHJhY2suaWQgKyBcIlwiLFxuICAgICAgICAgIGxhYmVsOiB0cmFjay5uYW1lLFxuICAgICAgICAgIGxhbmd1YWdlOiB0cmFjay5sYW5nIHx8IFwiXCIsXG4gICAgICAgICAga2luZDogXCJtYWluXCJcbiAgICAgICAgfSxcbiAgICAgICAgZXZlbnRcbiAgICAgICk7XG4gICAgfVxuICAgIGZvciAoY29uc3QgbGV2ZWwgb2YgdGhpcy5faW5zdGFuY2UubGV2ZWxzKSB7XG4gICAgICB0aGlzLl9jb250ZXh0LnF1YWxpdGllc1tMSVNUX0FERF0oXG4gICAgICAgIHtcbiAgICAgICAgICB3aWR0aDogbGV2ZWwud2lkdGgsXG4gICAgICAgICAgaGVpZ2h0OiBsZXZlbC5oZWlnaHQsXG4gICAgICAgICAgY29kZWM6IGxldmVsLmNvZGVjU2V0LFxuICAgICAgICAgIGJpdHJhdGU6IGxldmVsLmJpdHJhdGVcbiAgICAgICAgfSxcbiAgICAgICAgZXZlbnRcbiAgICAgICk7XG4gICAgfVxuICAgIG1lZGlhLmRpc3BhdGNoRXZlbnQobmV3IERPTUV2ZW50KFwiY2FucGxheVwiLCB7IHRyaWdnZXI6IGV2ZW50IH0pKTtcbiAgfVxuICBfb25FcnJvcihldmVudFR5cGUsIGRhdGEpIHtcbiAgICB7XG4gICAgICB0aGlzLl9jb250ZXh0LmxvZ2dlcj8uZXJyb3JHcm91cChgSExTIGVycm9yIFxcYCR7ZXZlbnRUeXBlfVxcYGApLmxhYmVsbGVkTG9nKFwiTWVkaWEgRWxlbWVudFwiLCB0aGlzLl9pbnN0YW5jZT8ubWVkaWEpLmxhYmVsbGVkTG9nKFwiSExTIEluc3RhbmNlXCIsIHRoaXMuX2luc3RhbmNlKS5sYWJlbGxlZExvZyhcIkV2ZW50IFR5cGVcIiwgZXZlbnRUeXBlKS5sYWJlbGxlZExvZyhcIkRhdGFcIiwgZGF0YSkubGFiZWxsZWRMb2coXCJTcmNcIiwgcGVlayh0aGlzLl9jb250ZXh0LiRzdG9yZS5zb3VyY2UpKS5sYWJlbGxlZExvZyhcIk1lZGlhIFN0b3JlXCIsIHsgLi4udGhpcy5fY29udGV4dC4kc3RvcmUgfSkuZGlzcGF0Y2goKTtcbiAgICB9XG4gICAgaWYgKGRhdGEuZmF0YWwpIHtcbiAgICAgIHN3aXRjaCAoZGF0YS50eXBlKSB7XG4gICAgICAgIGNhc2UgXCJuZXR3b3JrRXJyb3JcIjpcbiAgICAgICAgICB0aGlzLl9pbnN0YW5jZT8uc3RhcnRMb2FkKCk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgXCJtZWRpYUVycm9yXCI6XG4gICAgICAgICAgdGhpcy5faW5zdGFuY2U/LnJlY292ZXJNZWRpYUVycm9yKCk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgdGhpcy5faW5zdGFuY2U/LmRlc3Ryb3koKTtcbiAgICAgICAgICB0aGlzLl9pbnN0YW5jZSA9IG51bGw7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIF9lbmFibGVBdXRvUXVhbGl0eSgpIHtcbiAgICBpZiAodGhpcy5faW5zdGFuY2UpXG4gICAgICB0aGlzLl9pbnN0YW5jZS5jdXJyZW50TGV2ZWwgPSAtMTtcbiAgfVxuICBfb25RdWFsaXR5Q2hhbmdlKCkge1xuICAgIGNvbnN0IHsgcXVhbGl0aWVzIH0gPSB0aGlzLl9jb250ZXh0O1xuICAgIGlmICghdGhpcy5faW5zdGFuY2UgfHwgcXVhbGl0aWVzLmF1dG8pXG4gICAgICByZXR1cm47XG4gICAgdGhpcy5faW5zdGFuY2VbcXVhbGl0aWVzLnN3aXRjaCArIFwiTGV2ZWxcIl0gPSBxdWFsaXRpZXMuc2VsZWN0ZWRJbmRleDtcbiAgICBpZiAoSVNfQ0hST01FKVxuICAgICAgdGhpcy5fdmlkZW8uY3VycmVudFRpbWUgPSB0aGlzLl92aWRlby5jdXJyZW50VGltZTtcbiAgfVxuICBfb25BdWRpb0NoYW5nZSgpIHtcbiAgICBjb25zdCB7IGF1ZGlvVHJhY2tzIH0gPSB0aGlzLl9jb250ZXh0O1xuICAgIGlmICh0aGlzLl9pbnN0YW5jZSAmJiB0aGlzLl9pbnN0YW5jZS5hdWRpb1RyYWNrICE9PSBhdWRpb1RyYWNrcy5zZWxlY3RlZEluZGV4KSB7XG4gICAgICB0aGlzLl9pbnN0YW5jZS5hdWRpb1RyYWNrID0gYXVkaW9UcmFja3Muc2VsZWN0ZWRJbmRleDtcbiAgICB9XG4gIH1cbiAgX2Rlc3Ryb3koKSB7XG4gICAgaWYgKHRoaXMuX2NvbnRleHQpXG4gICAgICB0aGlzLl9jb250ZXh0LnF1YWxpdGllc1tFTkFCTEVfQVVUT19RVUFMSVRZXSA9IHZvaWQgMDtcbiAgICB0aGlzLl9pbnN0YW5jZT8uZGVzdHJveSgpO1xuICAgIHRoaXMuX2luc3RhbmNlID0gbnVsbDtcbiAgICB0aGlzLl9zdG9wTGl2ZVN5bmM/LigpO1xuICAgIHRoaXMuX3N0b3BMaXZlU3luYyA9IG51bGw7XG4gICAgdGhpcy5fY29udGV4dD8ubG9nZ2VyPy5pbmZvKFwiXFx1ezFGM0Q3fVxcdUZFMEYgRGVzdHJveWVkIEhMUyBpbnN0YW5jZVwiKTtcbiAgfVxufVxuXG5leHBvcnQgeyBITFNDb250cm9sbGVyIGFzIEgsIFJBRkxvb3AgYXMgUiB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/vidstack/dist/dev/providers/hls/hls.js\n"));

/***/ }),

/***/ "./node_modules/vidstack/dist/dev/providers/html/html–media-events.js":
/*!****************************************************************************!*\
  !*** ./node_modules/vidstack/dist/dev/providers/html/html–media-events.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   H: function() { return /* binding */ HTMLMediaEvents; }\n/* harmony export */ });\n/* harmony import */ var maverick_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! maverick.js */ \"./node_modules/maverick.js/dist/dev/runtime.js\");\n/* harmony import */ var maverick_js_std__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! maverick.js/std */ \"./node_modules/maverick.js/dist/dev/std.js\");\n/* harmony import */ var _hls_hls_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../hls/hls.js */ \"./node_modules/vidstack/dist/dev/providers/hls/hls.js\");\n/* harmony import */ var _audio_loader_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../audio/loader.js */ \"./node_modules/vidstack/dist/dev/providers/audio/loader.js\");\n/* harmony import */ var _media_ui_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../media-ui.js */ \"./node_modules/vidstack/dist/dev/media-ui.js\");\n/* harmony import */ var _media_core_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../media-core.js */ \"./node_modules/vidstack/dist/dev/media-core.js\");\n\n\n\n\n\n\n\nclass HTMLMediaEvents {\n  constructor(_provider, _context) {\n    this._provider = _provider;\n    this._context = _context;\n    this._attachInitialListeners();\n    (0,maverick_js__WEBPACK_IMPORTED_MODULE_0__.effect)(this._attachTimeUpdate.bind(this));\n    (0,maverick_js__WEBPACK_IMPORTED_MODULE_0__.onDispose)(this._onDispose.bind(this));\n  }\n  _disposal = (0,maverick_js_std__WEBPACK_IMPORTED_MODULE_1__.useDisposalBin)();\n  _waiting = false;\n  _attachedLoadStart = false;\n  _attachedCanPlay = false;\n  _timeRAF = new _hls_hls_js__WEBPACK_IMPORTED_MODULE_2__.R(this._onRAF.bind(this));\n  get _media() {\n    return this._provider.media;\n  }\n  get _delegate() {\n    return this._context.delegate;\n  }\n  _onDispose() {\n    this._timeRAF._stop();\n    this._disposal.empty();\n  }\n  /**\n   * The `timeupdate` event fires surprisingly infrequently during playback, meaning your progress\n   * bar (or whatever else is synced to the currentTime) moves in a choppy fashion. This helps\n   * resolve that by retrieving time updates in a request animation frame loop.\n   */\n  _onRAF() {\n    const newTime = this._provider.currentTime;\n    if (this._context.$store.currentTime() !== newTime)\n      this._updateCurrentTime(newTime);\n  }\n  _attachInitialListeners() {\n    this._attachEventListener(\"loadstart\", this._onLoadStart);\n    this._attachEventListener(\"abort\", this._onAbort);\n    this._attachEventListener(\"emptied\", this._onEmptied);\n    this._attachEventListener(\"error\", this._onError);\n    this._context.logger?.debug(\"attached initial media event listeners\");\n  }\n  _attachLoadStartListeners() {\n    if (this._attachedLoadStart)\n      return;\n    this._disposal.add(\n      this._attachEventListener(\"loadeddata\", this._onLoadedData),\n      this._attachEventListener(\"loadedmetadata\", this._onLoadedMetadata),\n      this._attachEventListener(\"canplay\", this._onCanPlay),\n      this._attachEventListener(\"canplaythrough\", this._onCanPlayThrough),\n      this._attachEventListener(\"durationchange\", this._onDurationChange),\n      this._attachEventListener(\"play\", this._onPlay),\n      this._attachEventListener(\"progress\", this._onProgress),\n      this._attachEventListener(\"stalled\", this._onStalled),\n      this._attachEventListener(\"suspend\", this._onSuspend)\n    );\n    this._attachedLoadStart = true;\n  }\n  _attachCanPlayListeners() {\n    if (this._attachedCanPlay)\n      return;\n    this._disposal.add(\n      this._attachEventListener(\"pause\", this._onPause),\n      this._attachEventListener(\"playing\", this._onPlaying),\n      this._attachEventListener(\"ratechange\", this._onRateChange),\n      this._attachEventListener(\"seeked\", this._onSeeked),\n      this._attachEventListener(\"seeking\", this._onSeeking),\n      this._attachEventListener(\"ended\", this._onEnded),\n      this._attachEventListener(\"volumechange\", this._onVolumeChange),\n      this._attachEventListener(\"waiting\", this._onWaiting)\n    );\n    this._attachedCanPlay = true;\n  }\n  _handlers = /* @__PURE__ */ new Map() ;\n  _handleDevEvent = this._onDevEvent.bind(this) ;\n  _attachEventListener(eventType, handler) {\n    this._handlers.set(eventType, handler);\n    return (0,maverick_js_std__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(\n      this._media,\n      eventType,\n      this._handleDevEvent \n    );\n  }\n  _onDevEvent(event2) {\n    this._context.logger?.debugGroup(`\\u{1F4FA} fired \\`${event2.type}\\``).labelledLog(\"Event\", event2).labelledLog(\"Media Store\", { ...this._context.$store }).dispatch();\n    this._handlers.get(event2.type)?.call(this, event2);\n  }\n  _updateCurrentTime(time, trigger) {\n    this._delegate._dispatch(\"time-update\", {\n      // Avoid errors where `currentTime` can have higher precision.\n      detail: {\n        currentTime: Math.min(time, this._context.$store.seekableEnd()),\n        played: this._media.played\n      },\n      trigger\n    });\n  }\n  _onLoadStart(event2) {\n    if (this._media.networkState === 3) {\n      this._onAbort(event2);\n      return;\n    }\n    this._attachLoadStartListeners();\n    this._delegate._dispatch(\"load-start\", { trigger: event2 });\n  }\n  _onAbort(event2) {\n    this._delegate._dispatch(\"abort\", { trigger: event2 });\n  }\n  _onEmptied() {\n    this._delegate._dispatch(\"emptied\", { trigger: event });\n  }\n  _onLoadedData(event2) {\n    this._delegate._dispatch(\"loaded-data\", { trigger: event2 });\n  }\n  _onLoadedMetadata(event2) {\n    this._onStreamTypeChange();\n    this._attachCanPlayListeners();\n    this._delegate._dispatch(\"volume-change\", {\n      detail: {\n        volume: this._media.volume,\n        muted: this._media.muted\n      }\n    });\n    this._delegate._dispatch(\"loaded-metadata\", { trigger: event2 });\n    if (_media_core_js__WEBPACK_IMPORTED_MODULE_3__.I && (0,_audio_loader_js__WEBPACK_IMPORTED_MODULE_4__.i)(this._context.$store.source())) {\n      this._delegate._ready(this._getCanPlayDetail(), event2);\n    }\n  }\n  _getCanPlayDetail() {\n    return {\n      duration: this._media.duration,\n      buffered: this._media.buffered,\n      seekable: this._media.seekable\n    };\n  }\n  _onStreamTypeChange() {\n    const isLive = !Number.isFinite(this._media.duration);\n    this._delegate._dispatch(\"stream-type-change\", {\n      detail: isLive ? \"live\" : \"on-demand\"\n    });\n  }\n  _onPlay(event2) {\n    if (!this._context.$store.canPlay)\n      return;\n    this._delegate._dispatch(\"play\", { trigger: event2 });\n  }\n  _onPause(event2) {\n    if (this._media.readyState === 1 && !this._waiting)\n      return;\n    this._waiting = false;\n    this._timeRAF._stop();\n    this._delegate._dispatch(\"pause\", { trigger: event2 });\n  }\n  _onCanPlay(event2) {\n    this._delegate._ready(this._getCanPlayDetail(), event2);\n  }\n  _onCanPlayThrough(event2) {\n    if (this._context.$store.started())\n      return;\n    this._delegate._dispatch(\"can-play-through\", {\n      trigger: event2,\n      detail: this._getCanPlayDetail()\n    });\n  }\n  _onPlaying(event2) {\n    this._waiting = false;\n    this._delegate._dispatch(\"playing\", { trigger: event2 });\n    this._timeRAF._start();\n  }\n  _onStalled(event2) {\n    this._delegate._dispatch(\"stalled\", { trigger: event2 });\n    if (this._media.readyState < 3) {\n      this._waiting = true;\n      this._delegate._dispatch(\"waiting\", { trigger: event2 });\n    }\n  }\n  _onWaiting(event2) {\n    if (this._media.readyState < 3) {\n      this._waiting = true;\n      this._delegate._dispatch(\"waiting\", { trigger: event2 });\n    }\n  }\n  _onEnded(event2) {\n    this._timeRAF._stop();\n    this._updateCurrentTime(this._media.duration, event2);\n    this._delegate._dispatch(\"end\", { trigger: event2 });\n    if (this._context.$store.loop()) {\n      this._onLoop();\n    } else {\n      this._delegate._dispatch(\"ended\", { trigger: event2 });\n    }\n  }\n  _attachTimeUpdate() {\n    if (this._context.$store.paused()) {\n      (0,maverick_js_std__WEBPACK_IMPORTED_MODULE_1__.listenEvent)(this._media, \"timeupdate\", this._onTimeUpdate.bind(this));\n    }\n  }\n  _onTimeUpdate(event2) {\n    this._updateCurrentTime(this._media.currentTime, event2);\n  }\n  _onDurationChange(event2) {\n    this._onStreamTypeChange();\n    if (this._context.$store.ended()) {\n      this._updateCurrentTime(this._media.duration, event2);\n    }\n    this._delegate._dispatch(\"duration-change\", {\n      detail: this._media.duration,\n      trigger: event2\n    });\n  }\n  _onVolumeChange(event2) {\n    this._delegate._dispatch(\"volume-change\", {\n      detail: {\n        volume: this._media.volume,\n        muted: this._media.muted\n      },\n      trigger: event2\n    });\n  }\n  _onSeeked(event2) {\n    this._updateCurrentTime(this._media.currentTime, event2);\n    this._delegate._dispatch(\"seeked\", {\n      detail: this._media.currentTime,\n      trigger: event2\n    });\n    if (Math.trunc(this._media.currentTime) === Math.trunc(this._media.duration) && (0,_media_ui_js__WEBPACK_IMPORTED_MODULE_5__.z)(this._media.duration) > (0,_media_ui_js__WEBPACK_IMPORTED_MODULE_5__.z)(this._media.currentTime)) {\n      this._updateCurrentTime(this._media.duration, event2);\n      if (!this._media.ended) {\n        this._context.player.dispatchEvent(\n          new maverick_js_std__WEBPACK_IMPORTED_MODULE_1__.DOMEvent(\"media-play-request\", {\n            trigger: event2\n          })\n        );\n      }\n    }\n  }\n  _onSeeking(event2) {\n    this._delegate._dispatch(\"seeking\", {\n      detail: this._media.currentTime,\n      trigger: event2\n    });\n  }\n  _onProgress(event2) {\n    this._delegate._dispatch(\"progress\", {\n      detail: {\n        buffered: this._media.buffered,\n        seekable: this._media.seekable\n      },\n      trigger: event2\n    });\n  }\n  _onLoop() {\n    const hasCustomControls = (0,maverick_js_std__WEBPACK_IMPORTED_MODULE_1__.isNil)(this._media.controls);\n    if (hasCustomControls)\n      this._media.controls = false;\n    this._context.player.dispatchEvent(new maverick_js_std__WEBPACK_IMPORTED_MODULE_1__.DOMEvent(\"media-loop-request\"));\n  }\n  _onSuspend(event2) {\n    this._delegate._dispatch(\"suspend\", { trigger: event2 });\n  }\n  _onRateChange(event2) {\n    this._delegate._dispatch(\"rate-change\", {\n      detail: this._media.playbackRate,\n      trigger: event2\n    });\n  }\n  _onError(event2) {\n    const error = this._media.error;\n    if (!error)\n      return;\n    this._delegate._dispatch(\"error\", {\n      detail: {\n        message: error.message,\n        code: error.code,\n        mediaError: error\n      },\n      trigger: event2\n    });\n  }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/vidstack/dist/dev/providers/html/html–media-events.js\n"));

/***/ }),

/***/ "./node_modules/vidstack/dist/dev/providers/html/native-audio-tracks.js":
/*!******************************************************************************!*\
  !*** ./node_modules/vidstack/dist/dev/providers/html/native-audio-tracks.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   N: function() { return /* binding */ NativeAudioTracks; }\n/* harmony export */ });\n/* harmony import */ var maverick_js_std__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! maverick.js/std */ \"./node_modules/maverick.js/dist/dev/std.js\");\n/* harmony import */ var _media_core_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../media-core.js */ \"./node_modules/vidstack/dist/dev/media-core.js\");\n\n\n\nclass NativeAudioTracks {\n  constructor(_provider, _context) {\n    this._provider = _provider;\n    this._context = _context;\n    this._nativeTracks.onaddtrack = this._onAddNativeTrack.bind(this);\n    this._nativeTracks.onremovetrack = this._onRemoveNativeTrack.bind(this);\n    this._nativeTracks.onchange = this._onChangeNativeTrack.bind(this);\n    (0,maverick_js_std__WEBPACK_IMPORTED_MODULE_0__.listenEvent)(this._context.audioTracks, \"change\", this._onChangeTrack.bind(this));\n  }\n  get _nativeTracks() {\n    return this._provider.media.audioTracks;\n  }\n  _onAddNativeTrack(event) {\n    const _track = event.track;\n    if (_track.label === \"\")\n      return;\n    const audioTrack = {\n      id: _track.id + \"\",\n      label: _track.label,\n      language: _track.language,\n      kind: _track.kind,\n      selected: false\n    };\n    this._context.audioTracks[_media_core_js__WEBPACK_IMPORTED_MODULE_1__.P](audioTrack, event);\n    if (_track.enabled)\n      audioTrack.selected = true;\n  }\n  _onRemoveNativeTrack(event) {\n    const track = this._context.audioTracks.getById(event.track.id);\n    if (track)\n      this._context.audioTracks[_media_core_js__WEBPACK_IMPORTED_MODULE_1__.X](track, event);\n  }\n  _onChangeNativeTrack(event) {\n    let enabledTrack = this._getEnabledNativeTrack();\n    if (!enabledTrack)\n      return;\n    const track = this._context.audioTracks.getById(enabledTrack.id);\n    if (track)\n      this._context.audioTracks[_media_core_js__WEBPACK_IMPORTED_MODULE_1__.L](track, true, event);\n  }\n  _getEnabledNativeTrack() {\n    return Array.from(this._nativeTracks).find((track) => track.enabled);\n  }\n  _onChangeTrack(event) {\n    const { current } = event.detail;\n    if (!current)\n      return;\n    const track = this._nativeTracks.getTrackById(current.id);\n    if (track) {\n      const prev = this._getEnabledNativeTrack();\n      if (prev)\n        prev.enabled = false;\n      track.enabled = true;\n    }\n  }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdmlkc3RhY2svZGlzdC9kZXYvcHJvdmlkZXJzL2h0bWwvbmF0aXZlLWF1ZGlvLXRyYWNrcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBOEM7QUFDMEM7O0FBRXhGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSw0REFBVztBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4Qiw2Q0FBUTtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MsNkNBQVc7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MsNkNBQVc7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksVUFBVTtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVrQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdmlkc3RhY2svZGlzdC9kZXYvcHJvdmlkZXJzL2h0bWwvbmF0aXZlLWF1ZGlvLXRyYWNrcy5qcz80MzUwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGxpc3RlbkV2ZW50IH0gZnJvbSAnbWF2ZXJpY2suanMvc3RkJztcbmltcG9ydCB7IFAgYXMgTElTVF9BREQsIFggYXMgTElTVF9SRU1PVkUsIEwgYXMgTElTVF9TRUxFQ1QgfSBmcm9tICcuLi8uLi9tZWRpYS1jb3JlLmpzJztcblxuY2xhc3MgTmF0aXZlQXVkaW9UcmFja3Mge1xuICBjb25zdHJ1Y3RvcihfcHJvdmlkZXIsIF9jb250ZXh0KSB7XG4gICAgdGhpcy5fcHJvdmlkZXIgPSBfcHJvdmlkZXI7XG4gICAgdGhpcy5fY29udGV4dCA9IF9jb250ZXh0O1xuICAgIHRoaXMuX25hdGl2ZVRyYWNrcy5vbmFkZHRyYWNrID0gdGhpcy5fb25BZGROYXRpdmVUcmFjay5iaW5kKHRoaXMpO1xuICAgIHRoaXMuX25hdGl2ZVRyYWNrcy5vbnJlbW92ZXRyYWNrID0gdGhpcy5fb25SZW1vdmVOYXRpdmVUcmFjay5iaW5kKHRoaXMpO1xuICAgIHRoaXMuX25hdGl2ZVRyYWNrcy5vbmNoYW5nZSA9IHRoaXMuX29uQ2hhbmdlTmF0aXZlVHJhY2suYmluZCh0aGlzKTtcbiAgICBsaXN0ZW5FdmVudCh0aGlzLl9jb250ZXh0LmF1ZGlvVHJhY2tzLCBcImNoYW5nZVwiLCB0aGlzLl9vbkNoYW5nZVRyYWNrLmJpbmQodGhpcykpO1xuICB9XG4gIGdldCBfbmF0aXZlVHJhY2tzKCkge1xuICAgIHJldHVybiB0aGlzLl9wcm92aWRlci5tZWRpYS5hdWRpb1RyYWNrcztcbiAgfVxuICBfb25BZGROYXRpdmVUcmFjayhldmVudCkge1xuICAgIGNvbnN0IF90cmFjayA9IGV2ZW50LnRyYWNrO1xuICAgIGlmIChfdHJhY2subGFiZWwgPT09IFwiXCIpXG4gICAgICByZXR1cm47XG4gICAgY29uc3QgYXVkaW9UcmFjayA9IHtcbiAgICAgIGlkOiBfdHJhY2suaWQgKyBcIlwiLFxuICAgICAgbGFiZWw6IF90cmFjay5sYWJlbCxcbiAgICAgIGxhbmd1YWdlOiBfdHJhY2subGFuZ3VhZ2UsXG4gICAgICBraW5kOiBfdHJhY2sua2luZCxcbiAgICAgIHNlbGVjdGVkOiBmYWxzZVxuICAgIH07XG4gICAgdGhpcy5fY29udGV4dC5hdWRpb1RyYWNrc1tMSVNUX0FERF0oYXVkaW9UcmFjaywgZXZlbnQpO1xuICAgIGlmIChfdHJhY2suZW5hYmxlZClcbiAgICAgIGF1ZGlvVHJhY2suc2VsZWN0ZWQgPSB0cnVlO1xuICB9XG4gIF9vblJlbW92ZU5hdGl2ZVRyYWNrKGV2ZW50KSB7XG4gICAgY29uc3QgdHJhY2sgPSB0aGlzLl9jb250ZXh0LmF1ZGlvVHJhY2tzLmdldEJ5SWQoZXZlbnQudHJhY2suaWQpO1xuICAgIGlmICh0cmFjaylcbiAgICAgIHRoaXMuX2NvbnRleHQuYXVkaW9UcmFja3NbTElTVF9SRU1PVkVdKHRyYWNrLCBldmVudCk7XG4gIH1cbiAgX29uQ2hhbmdlTmF0aXZlVHJhY2soZXZlbnQpIHtcbiAgICBsZXQgZW5hYmxlZFRyYWNrID0gdGhpcy5fZ2V0RW5hYmxlZE5hdGl2ZVRyYWNrKCk7XG4gICAgaWYgKCFlbmFibGVkVHJhY2spXG4gICAgICByZXR1cm47XG4gICAgY29uc3QgdHJhY2sgPSB0aGlzLl9jb250ZXh0LmF1ZGlvVHJhY2tzLmdldEJ5SWQoZW5hYmxlZFRyYWNrLmlkKTtcbiAgICBpZiAodHJhY2spXG4gICAgICB0aGlzLl9jb250ZXh0LmF1ZGlvVHJhY2tzW0xJU1RfU0VMRUNUXSh0cmFjaywgdHJ1ZSwgZXZlbnQpO1xuICB9XG4gIF9nZXRFbmFibGVkTmF0aXZlVHJhY2soKSB7XG4gICAgcmV0dXJuIEFycmF5LmZyb20odGhpcy5fbmF0aXZlVHJhY2tzKS5maW5kKCh0cmFjaykgPT4gdHJhY2suZW5hYmxlZCk7XG4gIH1cbiAgX29uQ2hhbmdlVHJhY2soZXZlbnQpIHtcbiAgICBjb25zdCB7IGN1cnJlbnQgfSA9IGV2ZW50LmRldGFpbDtcbiAgICBpZiAoIWN1cnJlbnQpXG4gICAgICByZXR1cm47XG4gICAgY29uc3QgdHJhY2sgPSB0aGlzLl9uYXRpdmVUcmFja3MuZ2V0VHJhY2tCeUlkKGN1cnJlbnQuaWQpO1xuICAgIGlmICh0cmFjaykge1xuICAgICAgY29uc3QgcHJldiA9IHRoaXMuX2dldEVuYWJsZWROYXRpdmVUcmFjaygpO1xuICAgICAgaWYgKHByZXYpXG4gICAgICAgIHByZXYuZW5hYmxlZCA9IGZhbHNlO1xuICAgICAgdHJhY2suZW5hYmxlZCA9IHRydWU7XG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCB7IE5hdGl2ZUF1ZGlvVHJhY2tzIGFzIE4gfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/vidstack/dist/dev/providers/html/native-audio-tracks.js\n"));

/***/ }),

/***/ "./node_modules/vidstack/dist/dev/providers/html/provider.js":
/*!*******************************************************************!*\
  !*** ./node_modules/vidstack/dist/dev/providers/html/provider.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   H: function() { return /* binding */ HTMLMediaProvider; }\n/* harmony export */ });\n/* harmony import */ var maverick_js_std__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! maverick.js/std */ \"./node_modules/maverick.js/dist/dev/std.js\");\n/* harmony import */ var _audio_loader_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../audio/loader.js */ \"./node_modules/vidstack/dist/dev/providers/audio/loader.js\");\n/* harmony import */ var _html_media_events_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./html–media-events.js */ \"./node_modules/vidstack/dist/dev/providers/html/html–media-events.js\");\n/* harmony import */ var _native_audio_tracks_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./native-audio-tracks.js */ \"./node_modules/vidstack/dist/dev/providers/html/native-audio-tracks.js\");\n\n\n\n\n\nclass HTMLMediaProvider {\n  constructor(_media) {\n    this._media = _media;\n  }\n  setup(context) {\n    new _html_media_events_js__WEBPACK_IMPORTED_MODULE_0__.H(this, context);\n    if (\"audioTracks\" in this.media)\n      new _native_audio_tracks_js__WEBPACK_IMPORTED_MODULE_1__.N(this, context);\n  }\n  get type() {\n    return \"\";\n  }\n  get media() {\n    return this._media;\n  }\n  get paused() {\n    return this._media.paused;\n  }\n  get muted() {\n    return this._media.muted;\n  }\n  set muted(muted) {\n    this._media.muted = muted;\n  }\n  get volume() {\n    return this._media.volume;\n  }\n  set volume(volume) {\n    this._media.volume = volume;\n  }\n  get currentTime() {\n    return this._media.currentTime;\n  }\n  set currentTime(time) {\n    this._media.currentTime = time;\n  }\n  get playsinline() {\n    return this._media.hasAttribute(\"playsinline\");\n  }\n  set playsinline(playsinline) {\n    (0,maverick_js_std__WEBPACK_IMPORTED_MODULE_2__.setAttribute)(this._media, \"playsinline\", playsinline);\n  }\n  get playbackRate() {\n    return this._media.playbackRate;\n  }\n  set playbackRate(rate) {\n    this._media.playbackRate = rate;\n  }\n  async play() {\n    return this._media.play();\n  }\n  async pause() {\n    return this._media.pause();\n  }\n  async loadSource({ src }, preload) {\n    this._media.preload = preload;\n    if ((0,_audio_loader_js__WEBPACK_IMPORTED_MODULE_3__.b)(src)) {\n      this._media.srcObject = src;\n    } else {\n      this._media.srcObject = null;\n      this._media.src = (0,maverick_js_std__WEBPACK_IMPORTED_MODULE_2__.isString)(src) ? src : window.URL.createObjectURL(src);\n    }\n    this._media.load();\n  }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdmlkc3RhY2svZGlzdC9kZXYvcHJvdmlkZXJzL2h0bWwvcHJvdmlkZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBeUQ7QUFDRDtBQUNNO0FBQ0k7O0FBRWxFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLG9EQUFlO0FBQ3ZCO0FBQ0EsVUFBVSxzREFBaUI7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUksNkRBQVk7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsS0FBSztBQUMxQjtBQUNBLFFBQVEsbURBQWE7QUFDckI7QUFDQSxNQUFNO0FBQ047QUFDQSx3QkFBd0IseURBQVE7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7O0FBRWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy92aWRzdGFjay9kaXN0L2Rldi9wcm92aWRlcnMvaHRtbC9wcm92aWRlci5qcz81NTIxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHNldEF0dHJpYnV0ZSwgaXNTdHJpbmcgfSBmcm9tICdtYXZlcmljay5qcy9zdGQnO1xuaW1wb3J0IHsgYiBhcyBpc01lZGlhU3RyZWFtIH0gZnJvbSAnLi4vYXVkaW8vbG9hZGVyLmpzJztcbmltcG9ydCB7IEggYXMgSFRNTE1lZGlhRXZlbnRzIH0gZnJvbSAnLi9odG1s4oCTbWVkaWEtZXZlbnRzLmpzJztcbmltcG9ydCB7IE4gYXMgTmF0aXZlQXVkaW9UcmFja3MgfSBmcm9tICcuL25hdGl2ZS1hdWRpby10cmFja3MuanMnO1xuXG5jbGFzcyBIVE1MTWVkaWFQcm92aWRlciB7XG4gIGNvbnN0cnVjdG9yKF9tZWRpYSkge1xuICAgIHRoaXMuX21lZGlhID0gX21lZGlhO1xuICB9XG4gIHNldHVwKGNvbnRleHQpIHtcbiAgICBuZXcgSFRNTE1lZGlhRXZlbnRzKHRoaXMsIGNvbnRleHQpO1xuICAgIGlmIChcImF1ZGlvVHJhY2tzXCIgaW4gdGhpcy5tZWRpYSlcbiAgICAgIG5ldyBOYXRpdmVBdWRpb1RyYWNrcyh0aGlzLCBjb250ZXh0KTtcbiAgfVxuICBnZXQgdHlwZSgpIHtcbiAgICByZXR1cm4gXCJcIjtcbiAgfVxuICBnZXQgbWVkaWEoKSB7XG4gICAgcmV0dXJuIHRoaXMuX21lZGlhO1xuICB9XG4gIGdldCBwYXVzZWQoKSB7XG4gICAgcmV0dXJuIHRoaXMuX21lZGlhLnBhdXNlZDtcbiAgfVxuICBnZXQgbXV0ZWQoKSB7XG4gICAgcmV0dXJuIHRoaXMuX21lZGlhLm11dGVkO1xuICB9XG4gIHNldCBtdXRlZChtdXRlZCkge1xuICAgIHRoaXMuX21lZGlhLm11dGVkID0gbXV0ZWQ7XG4gIH1cbiAgZ2V0IHZvbHVtZSgpIHtcbiAgICByZXR1cm4gdGhpcy5fbWVkaWEudm9sdW1lO1xuICB9XG4gIHNldCB2b2x1bWUodm9sdW1lKSB7XG4gICAgdGhpcy5fbWVkaWEudm9sdW1lID0gdm9sdW1lO1xuICB9XG4gIGdldCBjdXJyZW50VGltZSgpIHtcbiAgICByZXR1cm4gdGhpcy5fbWVkaWEuY3VycmVudFRpbWU7XG4gIH1cbiAgc2V0IGN1cnJlbnRUaW1lKHRpbWUpIHtcbiAgICB0aGlzLl9tZWRpYS5jdXJyZW50VGltZSA9IHRpbWU7XG4gIH1cbiAgZ2V0IHBsYXlzaW5saW5lKCkge1xuICAgIHJldHVybiB0aGlzLl9tZWRpYS5oYXNBdHRyaWJ1dGUoXCJwbGF5c2lubGluZVwiKTtcbiAgfVxuICBzZXQgcGxheXNpbmxpbmUocGxheXNpbmxpbmUpIHtcbiAgICBzZXRBdHRyaWJ1dGUodGhpcy5fbWVkaWEsIFwicGxheXNpbmxpbmVcIiwgcGxheXNpbmxpbmUpO1xuICB9XG4gIGdldCBwbGF5YmFja1JhdGUoKSB7XG4gICAgcmV0dXJuIHRoaXMuX21lZGlhLnBsYXliYWNrUmF0ZTtcbiAgfVxuICBzZXQgcGxheWJhY2tSYXRlKHJhdGUpIHtcbiAgICB0aGlzLl9tZWRpYS5wbGF5YmFja1JhdGUgPSByYXRlO1xuICB9XG4gIGFzeW5jIHBsYXkoKSB7XG4gICAgcmV0dXJuIHRoaXMuX21lZGlhLnBsYXkoKTtcbiAgfVxuICBhc3luYyBwYXVzZSgpIHtcbiAgICByZXR1cm4gdGhpcy5fbWVkaWEucGF1c2UoKTtcbiAgfVxuICBhc3luYyBsb2FkU291cmNlKHsgc3JjIH0sIHByZWxvYWQpIHtcbiAgICB0aGlzLl9tZWRpYS5wcmVsb2FkID0gcHJlbG9hZDtcbiAgICBpZiAoaXNNZWRpYVN0cmVhbShzcmMpKSB7XG4gICAgICB0aGlzLl9tZWRpYS5zcmNPYmplY3QgPSBzcmM7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX21lZGlhLnNyY09iamVjdCA9IG51bGw7XG4gICAgICB0aGlzLl9tZWRpYS5zcmMgPSBpc1N0cmluZyhzcmMpID8gc3JjIDogd2luZG93LlVSTC5jcmVhdGVPYmplY3RVUkwoc3JjKTtcbiAgICB9XG4gICAgdGhpcy5fbWVkaWEubG9hZCgpO1xuICB9XG59XG5cbmV4cG9ydCB7IEhUTUxNZWRpYVByb3ZpZGVyIGFzIEggfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/vidstack/dist/dev/providers/html/provider.js\n"));

/***/ })

}]);